{"mappings":"AAAA,MAAMA,iBAAmBC,SAASC,cAAc,eAC1CC,KAAOF,SAASC,cAAc,SAC9BE,QAAUH,SAASI,eAAe,WAClCC,YAAcL,SAASC,cAAc,8BAGrCK,YAAcN,SAASI,eAAe,mBACtCG,cAAgBP,SAASC,cAAc,eACvCO,QAAU,GAIVC,gBAAkB,CAACC,EAAaC,EAAWC,EAASC,EAAMC,EAAUC,EAAWC,KACnF,MAAMC,EAAQ,CACZP,cACAC,YACAC,UACAC,OACAC,WACAC,YACAC,SAEFR,QAAQU,KAAKD,GACbE,aAAaC,QAAQ,cAAeC,KAAKC,UAAUd,SAAA,EAK/Ce,qBAAuB,EAAGb,cAAaC,YAAWC,UAASC,OAAMC,WAAUC,YAAWC,YAE1F,MAAMQ,EAAaxB,SAASyB,cAAc,OACpCC,EAAqB1B,SAASyB,cAAc,MAC5CE,EAA0B3B,SAASyB,cAAc,KACjDG,EAAwB5B,SAASyB,cAAc,KAC/CI,EAAyB7B,SAASyB,cAAc,KAChDK,EAAyB9B,SAASyB,cAAc,KAGtDC,EAAmBK,UAAY,iBAAmBrB,EAClDiB,EAAwBI,UAAY,eAAiBpB,EACrDiB,EAAsBG,UAAY,aAAenB,EACjDiB,EAAuBE,UAAY,uBAAyBC,mBAAmBnB,EAAMC,EAAUC,GAC/Fe,EAAuBC,UAAY,cAAgBf,EAGnDQ,EAAWS,OAAOP,EAAoBC,EAAyBC,EAAuBC,EAAwBC,GAC9GvB,cAAc2B,YAAYV,EAAA,EAItBQ,mBAAqB,CAACnB,EAAMC,EAAUC,IACtCF,EAAa,OACbC,EAAiB,WACjBC,EAAkB,YAAtB,EAgBF,SAASoB,WACPjC,KAAKkC,UAAUC,IAAI,UACnBlC,QAAQiC,UAAUC,IAAI,SACxB,CAGA,SAASC,YACPpC,KAAKkC,UAAUG,OAAO,UACtBpC,QAAQiC,UAAUG,OAAO,SAC3B,CArBAxC,iBAAiByC,iBAAiB,SAAS,KACzCL,UAAA,IAKF9B,YAAYmC,iBAAiB,SAAS,KACpCF,WAAA,IAiBF,MAAMG,kBAAoBtB,aAAauB,QAAQ,eAC3CD,mBACFjC,QAAQU,QAAQG,KAAKsB,MAAMF,oBAI7BjC,QAAQoC,QAAQrB,sBAGhB,MAAMsB,WAAa7C,SAASI,eAAe,cAC3CyC,WAAWL,iBAAiB,SAAUM,IACpCA,EAAMC,iBAGN,MAAMrC,EAAcJ,YAAY0C,SAAS,qBAAqBC,MACxDtC,EAAYL,YAAY0C,SAAS,2BAA2BC,MAC5DrC,EAAUN,YAAY0C,SAAS,yBAAyBC,MACxDpC,EAAOP,YAAY0C,SAAS,gCAAgCE,QAC5DpC,EAAWR,YAAY0C,SAAS,oCAAoCE,QACpEnC,EAAYT,YAAY0C,SAAS,gCAAgCE,QACjElC,EAAQV,YAAY0C,SAAS,mBAAmBC,MAGtDxC,gBAAgBC,EAAaC,EAAWC,EAASC,EAAMC,EAAUC,EAAWC,GAG5EV,YAAY6C,QAGZb,YAGAf,qBAAqB,CAAEb,cAAaC,YAAWC,UAASC,OAAMC,WAAUC,YAAWC,SAAM","sources":["public/script.js"],"sourcesContent":["const addWorkoutButton = document.querySelector('#addWorkout');\nconst form = document.querySelector('#form');\nconst overlay = document.getElementById('overlay');\nconst closeButton = document.querySelector('.form-header .close-button');\n\n// loading local storage variables\nconst workoutForm = document.getElementById(\"userWorkoutForm\");\nconst formContainer = document.querySelector(\".form-group\");\nconst workout = [];\n\n// taking in workout entry data and creating an entry object to store using localStorage & using JSON to condense data into string\n\nconst addWorkoutEntry = (workoutDate, startTime, endTime, easy, moderate, difficult, style) => {\n  const entry = {\n    workoutDate,\n    startTime,\n    endTime,\n    easy,\n    moderate,\n    difficult,\n    style\n  };\n  workout.push(entry);\n  localStorage.setItem('workoutData', JSON.stringify(workout));\n};\n\n// creating a workout element that takes in an entry object\n\nconst createWorkoutElement = ({ workoutDate, startTime, endTime, easy, moderate, difficult, style }) => {\n  // loading new variables into DOM\n  const workoutDiv = document.createElement('div');\n  const workoutDateElement = document.createElement('h1');\n  const workoutStartTimeElement = document.createElement('p');\n  const workoutEndTimeElement = document.createElement('p');\n  const difficultyLevelElement = document.createElement('p');\n  const workoutJumpTypeElement = document.createElement('p');\n\n  // adding inner text to elements\n  workoutDateElement.innerText = \"Workout Date: \" + workoutDate;\n  workoutStartTimeElement.innerText = \"Start-time: \" + startTime;\n  workoutEndTimeElement.innerText = \"End-time: \" + endTime;\n  difficultyLevelElement.innerText = \"Workout Difficulty: \" + getDifficultyLevel(easy, moderate, difficult);\n  workoutJumpTypeElement.innerText = \"Jump-Type: \" + style;\n\n  // appending elements to container\n  workoutDiv.append(workoutDateElement, workoutStartTimeElement, workoutEndTimeElement, difficultyLevelElement, workoutJumpTypeElement);\n  formContainer.appendChild(workoutDiv);\n};\n\n// determining difficulty level data type and assigning correct output to entry\nconst getDifficultyLevel = (easy, moderate, difficult) => {\n  if (easy) return \"Easy\";\n  if (moderate) return \"Moderate\";\n  if (difficult) return \"Hard\";\n};\n\n// add workout button functionality\naddWorkoutButton.addEventListener('click', () => {\n  openForm();\n});\n\n// close button functionality\n\ncloseButton.addEventListener('click', () => {\n  closeForm();\n});\n\n// opening the form\n\nfunction openForm() {\n  form.classList.add('active');\n  overlay.classList.add('active');\n}\n\n// closing the form\nfunction closeForm() {\n  form.classList.remove('active');\n  overlay.classList.remove('active');\n}\n\n// Load workout data from local storage\nconst storedWorkoutData = localStorage.getItem('workoutData');\nif (storedWorkoutData) {\n  workout.push(...JSON.parse(storedWorkoutData));\n}\n\n// Render existing workout entries\nworkout.forEach(createWorkoutElement);\n\n// Handle form submission\nconst saveButton = document.getElementById('saveButton');\nsaveButton.addEventListener('click', (event) => {\n  event.preventDefault();\n\n  // Get form values\n  const workoutDate = workoutForm.elements['user-workout-date'].value;\n  const startTime = workoutForm.elements['user-workout-start-time'].value;\n  const endTime = workoutForm.elements['user-workout-end-time'].value;\n  const easy = workoutForm.elements['user-workout-difficulty-easy'].checked;\n  const moderate = workoutForm.elements['user-workout-difficulty-moderate'].checked;\n  const difficult = workoutForm.elements['user-workout-difficulty-hard'].checked;\n  const style = workoutForm.elements['user-jump-types'].value;\n\n  // Create workout entry\n  addWorkoutEntry(workoutDate, startTime, endTime, easy, moderate, difficult, style);\n\n  // Clear form inputs\n  workoutForm.reset();\n\n  // Hide the workout form\n  closeForm();\n\n  // Generate updated workout history cards\n  createWorkoutElement({ workoutDate, startTime, endTime, easy, moderate, difficult, style });\n});\n"],"names":["addWorkoutButton","document","querySelector","form","overlay","getElementById","closeButton","workoutForm","formContainer","workout","addWorkoutEntry","workoutDate","startTime","endTime","easy","moderate","difficult","style","entry","push","localStorage","setItem","JSON","stringify","createWorkoutElement","workoutDiv","createElement","workoutDateElement","workoutStartTimeElement","workoutEndTimeElement","difficultyLevelElement","workoutJumpTypeElement","innerText","getDifficultyLevel","append","appendChild","openForm","classList","add","closeForm","remove","addEventListener","storedWorkoutData","getItem","parse","forEach","saveButton","event","preventDefault","elements","value","checked","reset"],"version":3,"file":"index.4678a939.js.map"}